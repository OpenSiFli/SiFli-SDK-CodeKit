name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          
      - name: Get version and tag info
        id: get-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        
      - name: Install webview dependencies
        run: |
          cd webview-vue
          yarn install --frozen-lockfile
          
      - name: Build webview
        run: yarn run build:webview
        
      - name: Compile TypeScript
        run: yarn run compile
        
      - name: Copy templates
        run: yarn run copy-templates
        
      - name: Package extension
        run: yarn run package
        
      - name: List generated files
        run: ls -la *.vsix
        
      - name: Upload VSIX as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sifli-sdk-codekit-${{ steps.get-version.outputs.version }}-${{ github.sha }}
          path: '*.vsix'
          retention-days: 30
          
  release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: sifli-sdk-codekit-${{ needs.build.outputs.version }}-${{ github.sha }}
          
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "*.vsix"
          artifactContentType: application/zip
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          draft: false
          prerelease: ${{ contains(github.ref, '-') }}
          
  publish-marketplace:
    runs-on: ubuntu-latest
    needs: [build, release]
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: sifli-sdk-codekit-${{ needs.build.outputs.version }}-${{ github.sha }}
          
      - name: Publish to VS Code Marketplace
        env:
          VSCE_PAT: ${{ secrets.VS_MARKETPLACE_TOKEN }}
        run: |
          # Publish the pre-built VSIX to marketplace
          npx vsce publish --packagePath *.vsix --pat $VSCE_PAT
